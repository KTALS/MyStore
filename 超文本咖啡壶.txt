网络工作组	L.马辛
征求意见：2324	1998年4月1日
类别：信息
超文本咖啡壶控制协议(HTCPCP/1.0)
本备忘录的状况

这份备忘录为互联网社区提供信息。它没有指定任何类型的互联网标准。这份备忘录的分发不受任何限制。

版权公告
版权(C)因特网协会(1998年)。	版权所有。
摘要
本文档描述了HTCPCP，一种用于控制、监视和诊断咖壶的协议。
咖啡全世界到处都有。在一个运算也无处不在的世界里，计算机专家们也会有想煮咖啡的时候。煮咖啡是一门艺术，但网络连接世界的分布式智能却不仅仅是艺术。因此，我们迫切的需要一个强大的，黑暗的协议用于浓缩咖啡的制造。咖啡是用咖啡壶煮的。网络咖啡壶如果需要控制，就需要一个控制协议。
越来越多的家庭和消费者设备已经接入互联网。早期的联网实践实现了自动售货机连接到互联网从而对可口可乐的售卖进行状态监测。此外，因特网烤面包机(通过SNMP控制的)是连接到因特网的最早的远程操作的机器之一，它于1990年首次亮相[RFC 2235]。
对无处不在的设备连接的需求导致了IPv 4地址空间的消耗。消费者想要远程控制诸如咖啡壶之类的设备，这样他们就可以在醒来的时候喝刚煮好的咖啡，或者在晚餐准备完成后刚好能喝到新出炉的咖啡。
本文档特别描述了超文本咖啡壶控制协议(HTCPCP)，该协议允许对所有能够生产受欢迎的含咖啡因热饮料的设备实现各种请求和响应。
HTTP 1.1([RFC 2068])允许将Web对象从原始服务器在全世界范围内发送到客户端。HTCPCP是基于HTTP的。这是因为HTTP无处不在。如果没有良好的表现，它就不可能如此普及。因此，HTTP很好用。如果你想要喝到完美的咖啡，那么HTCPCP就需要很完美。为了使HTCPCP更完美，以HTTP为基础构建HTCPCP是个不错的方式。
该协议的未来版本可能包括对浓缩咖啡机和类似设备提供扩展支持。
2.HTCPCP协议
HTCPCP基于HTTP之上，添加了一些新的方法、头字段和返回代码。所有HTCPCP服务器都应该参考“coffee:”URI方案(第4节)来使用。
2.1添加HTCPCP的方法
2.1.1 BREW方法和POST的使用
通过使用BREW或POST方法将控制咖啡壶的命令从客户端发送到咖啡服务器，并将内容类型设置为“application/咖啡-pot-命令”的消息体。
咖啡壶服务器必须同时接受BREW和POST方法。然而，使用POST来导致操作发生是不可取的。
咖啡壶用电子装置加热水，不需要火。因此，也不需要防火墙，防火墙控制策略也无关紧要。然而，POST可能是咖啡的商标，因此添加了BREW方法。BREW方法可以与其他基于HTTP的协议(例如，超文本啤酒控制协议)一起使用。
2.1.2 GET方法
在HTTP中，get方法用于“获取由请求的URI标识的所有信息(以实体的形式)”。如果请求URI与数据生成过程相关，应返回生成的数据而不是原文本，除非该文本恰好是输出。
在HTCPCP中，与咖啡壶相关的资源是物理资源，不是信息资源。大多数咖啡URI的“数据”不含咖啡因。
2.1.3 PROPFIND方法
如果一杯咖啡是数据，则使用PROPFIND方法[WebDAV]获取酿造资源的元数据。
2.1.4 WHEN方法
当咖啡倒入牛奶时，当倒入咖啡的牛奶已经够了的时候，牛奶的所有人必须说“when”所以，将“When”方法添加到HTCPCP中。牛奶够了？那就说“when”。
2.2 Coffee Pot头字段
HTCPCP推荐几个HTTP头字段，并定义了一些新字段。
2.2.1建议标题字段
2.2.1.1“安全”响应头字段。
[Safe]定义了一个HTTP响应头字段“安全”，它可以用来表示重复HTTP请求是安全的。如果请求的结果重复的话，则包含“Safe：YES”标头字段可以允许客户端重复先前的请求。
煮咖啡设备的实际安全性差别很大，实际上可能取决于客户端的情况，而不仅仅是服务器上的情况。因此，该协议包括对“安全”响应头的扩展：
Safe = "Safe" ":" safe-nature
safe-nature = "yes" | "no" | conditionally-safe
conditionally-safe = "if-" safe-condition
safe-condition = "user-awake" | token
指示将允许用户代理以更友好的方式处理某些安全请求的重试，尤其是安全的POST请求。
2.2.2新的标头字段
2.2.2.1接受-添加标题字段
在HTTP中，“接受”请求头字段用于可以接受的媒体类型来进行响应，然而，在HTCPCP中，该响应可能导致自动咖啡壶出现额外动作。出于这个原因，HTCPCP添加了一个新的头字段“Accept-add”：
Accept-Additions = "Accept-Additions" ":"
#( addition-range [ accept-params ] )
addition-type = ( "*"
| milk-type
| syrup-type
| sweetener-type
| spice-type
| alcohol-type
) *( ";" parameter )
milk-type 	= ( "Cream" | "Half-and-half" | "Whole-milk"
| "Part-Skim" | "Skim" | "Non-Dairy" )
syrup-type = ( "Vanilla" | "Almond" | "Raspberry"
| "Chocolate" )
alcohol-type = ( "Whisky" | "Rum" | "Kahlua" | "Aquavit" )
2.2.3已提交的头字段
没有为无咖啡因咖啡提供选项。因为没什么意义。
2.3 HTCPCP返回码
正常的HTTP返回码用于指示HTCPCP服务器的困难。本节确定了特殊的解释和新的返回代码。
2.3.1 406不能接受
此返回代码通常被解释为“请求标识的资源根据请求中发送的接受标头生成内容只能是特征不可接受的响应实体。在HTCPCP中，如果咖啡壶的操作员不能满足接受添加请求，则可以返回此响应代码。除非请求是头请求，否则响应应该包含一个实体，这个实体有一个包含所有可向咖啡添加的添加物的列表。
在实践中，大多数自动咖啡壶目前无法提供添加物。
2.3.2 418 I’m a teapot
任何尝试用茶壶煮咖啡的行为都会导致返回错误代码“418 I’m a teapot”。生成的实体正文短而可靠。
3.“coffee” URI模式
因为咖啡是国际性的，所以要有国际咖啡URI模式。所有咖啡URL方案都是按照URI[URLI18N]中的国际化惯例，使用UTF-8编码的URL编码编写的。

coffee-url	=	coffee-scheme ":" [ “//” 主机 ]
[ “/” 咖啡壶编号 ][ “？” 添加物列表 ]
coffee-scheme = ( "koffie"	; 南非, 荷兰语
| "q%C3%A6hv%C3%A6"	; 阿塞拜疆
| "%D9%82%D9%87%D9%88%D8%A9" ; 阿拉伯
| "akeita"	; 巴斯克
| "koffee"	; 孟加拉
| "kahva"	; 波斯尼亚
| "kafe"	; 保加利亚, 捷克
| "caf%C3%E8"	; 加泰罗尼亚, 法国, 加利西亚
| "%E5%92%96%E5%95%A1"	; 中文
| "kava"	; 克罗地亚
| "k%C3%A1va	; 捷克
| "kaffe"	; 丹麦, 挪威, 瑞典
| "coffee"	; 英国
| "kafo"	; 世界语
| "kohv"	; 爱沙尼亚
| "kahvi"	; 芬兰
| "%4Baffee"	; 德国
| "%CE%BA%CE%B1%CF%86%CE%AD" ; 希腊
| "%E0%A4%95%E0%A5%8C%E0%A4%AB%E0%A5%80" ; 印地语
| "%E3%82%B3%E3%83%BC%E3%83%92%E3%83%BC" ; 日本
| "%EC%BB%A4%ED%94%BC"	; 韩国
| "%D0%BA%D0%BE%D1%84%D0%B5" ; 俄罗斯
| "%E0%B8%81%E0%B8%B2%E0%B9%81%E0%B8%9F" ; 泰国
)
pot-designator = "pot-" integer ;对于具有多个POTS加法的机器来说
附加列表 = #( 附加内容 )

以上所有可选的咖啡模式表都是平等的。但是，表中用不同语言来称呼咖啡可能会被解释为由咖啡壶产生的不同咖啡的种类。请注意，虽然URL方案名称与大小写无关，但大写对于德语很重要，因此必须对初始的“K”进行编码。
4. "message/coffeepot" 媒体类型
一个帖子或BREW请求的实体的主体必须是内容类型的“Message/coeepot”。由于咖啡壶的大部分控制信息是由附加的头部传递的，所以“Message/coeepot”的内容只包含一个 coffee-message-body 正文：
Coffee报文主体= "start" | "stop"
5. 操作中的限制
本节详细介绍了HTCPCP部署时产生的一些操作问题。
5.1 关于时钟因素
咖啡壶用户和咖啡壶服务之间需要有一个可靠的服务来保证服务质量。咖啡壶应该使用网络时间协议[NTP]从而可以让它的时钟与全球的标准时间精准同步。
遥控技术是一项昂贵的技术。然而，随着剑桥咖啡壶[CAM]的出现，使用Web(而不是SNMP)进行远程系统监视和管理已经被证明是可行的。咖啡壶额外维护任务可以通过远程机器人来完成。
Web数据通常是静态的。因此，为了节省数据传输和时间，Web浏览器程序将用户接收的每个网页存储在用户计算机上。所以，如果用户想返回到该页面，它就可以从本地调取而不需要再次向服务器请求。有些图像是用于实现机器人控制或者是监视变化场景的，所以这些图像是动态，因此每次访问服务器时，都需要从服务器获取最新的图像。
5.2跨越防火墙
在大多数组织中，HTTP流量都很容易通过防火墙。虽然现代咖啡壶不使用火，但是“防火墙”也是很有用的，它可以用来隔绝任何源头、任何形式的热量，而不仅仅是火灾。每个家庭的计算机网络都应该受到防火墙的保护，不受热源的影响。然而，在家外面就能对咖啡壶进行远程控制十分重要。因此，HTCPCP必须能轻易穿过防火墙，这一点十分重要。
通过基于HTTP的HTCPCP并使用端口80，它将获得HTTP的所有跨越防火墙所能获得的好处。当然，家庭防火墙将需要重新配置或新版本，以适应HTCPCP的方法，报头和拖车，但这样的升级是很容易适应的。大多数家庭网络系统管理员都有喝咖啡的习惯，并愿意满足隧道HTCPCP的需求。
使用HTTP协议进行咖啡壶监控已经是Web应用的早期了。在最早的时候，咖啡壶监控是ATM网络[CAM]的早期(也是合适的)应用场景。
传统的技术[CAM]是摄像机上进行帧抓取，并将图像传送到Web服务器。这是ATM网络的合适的应用场景。在这个咖啡壶的安装环节，剑桥大学实验室的特洛伊木马可以提供一个网络接口来监控一个普通的咖啡壶。我们中的一些人参与了相关的研究，我们是很穷很穷的研究员，所以我们一共只有一台咖啡过滤机放在特洛伊房间外面的走廊里。然而，作为一名非常敬业和勤奋的学者，我们的确喝了很多咖啡，而煮一壶新咖啡不会用很长时间。
剑桥计算机实验室设计的MSRPC 2（一个新RPC机制）的应用程序创建并第一次使用了这个机制。它运行于MSNL(多业务网络层)--一种为ATM网络设计的网络层协议.
互联网上的咖啡壶可以使用Coffee Pot MIB[CPMIB]管理。
任何介于我和我的早间咖啡之间的人都应该被认为是不安全的。
互联网用户对未加保护的咖啡壶的不加限制的访问可能会导致几种“拒绝咖啡服务”攻击。过滤设备的不当使用可能会导致特洛伊木马。过滤并不是病毒保护的好方法。
将咖啡渣倒入互联网管道可能会导致管道堵塞，这将需要一名互联网水管工(水管工)的服务，而后者又需要一名互联网管道工帮手。
访问身份验证将在另一份备忘录中讨论。
非常感谢这个标准的许多贡献者，包括罗伊?菲尔丁、马克?戴、基思?摩尔、卡尔?尤诺-曼罗斯、迈克尔?斯拉维奇和马丁?杜斯特。这一有价值的发明来自于普鲁奇小马、CMU可乐机、剑桥咖啡壶、互联网烤面包机和其他电脑遥控设备的灵感。
[RFC 2068]Fielding，R.，Gettys，J.，Mogul，J.，Frystyk，H.和T.Berners-Lee，“超文本传输协议--HTTP/1.1”，RFC 2068，1997年1月。
[RFC 2186]Wessels，D.和K.Claffy，“Internet Cache Protocol(ICP)，版本2”，RFC 2186，1997年9月
[CPMIB]Servitch，M.，“使用SMIv 2的滴灌式加热饮料硬件设备管理对象的定义”，RFC 2325，1998年4月1日。
[HTSVMP]Q.斯塔福德-弗雷泽，“超文本桑威治范监测协议，3.2版”。正在准备中。
[RFC 2295]Holtman，K.和A.Mutz，“HTTP中的透明内容谈判”，RFC 2295，1998年3月。
[safe]K.Holtman。“安全响应标题字段”，1997年9月。
[CAM]“木马咖啡机”，D.Gordon和M.Johnson，剑桥大学计算机实验室，<http://www.cl.cam.ac.uk/coffee/coffee.html>
[cbIO]“木马咖啡壶，一本(非技术)传记”，剑桥大学计算机实验室，<http://www.cl.cam.ac.uk/coffee/qsf/coffee.html>.，Q.斯塔福德-弗雷泽
[RFC 2235]Zakon，R.，“霍布斯的互联网时间表”，FYI 32，RFC 2230，1997年11月。另见<http://www.internode.com.au/images/toaster2.jpg>
但间	信息性	[第8页]
RFC 2324	HTCPCP/1.0	1998年4月1日
[NTP]Mills，D.，“网络时间协议(第3版)规范、实现和分析”，RFC 1305，1992年3月。
[URLI18N]Masint，L.，“对扩展URI中的非ASCII字符使用UTF 8”工作正在进行中。
[plumbb]B.Metcalfe，“互联网年度水管工：Jim Gettys”，“信息世界”，1998年2月2日。
[可口可乐]D.尼科尔斯，“可口可乐机器历史”，C.Everhart，“有趣”
“网络的使用”，<http://www-
cse.ucsd.edu/user/bsy/coke.History y.txt>。
10.提交人地址
拉里?马辛格
施乐帕洛阿尔托研究中心
土狼山道3333号
帕洛阿尔托，CA 94304
电子邮件：Masint@parc.xerox.com
但间	信息性	[第9页]
RFC 2324	HTCPCP/1.0	1998年4月1日
版权(C)因特网协会(1998年)。	版权所有。
本文件及其译本可复制及提供予他人，而评论或以其他方式解释该文件或协助其实施的衍生作品，可全部或部分编拟、复制、出版及分发，而不受任何种类的限制，但上述版权公告及本段须包括在所有该等副本及衍生作品内。但是，不得以任何方式修改本文件本身，例如删除版权通知或对因特网协会或其他互联网组织的提及，除非是为了制定因特网标准而需要的，在这种情况下，必须遵守因特网标准程序中界定的版权程序，或根据需要将其翻译成英文以外的语言。
以上授予的有限权限是永久的，不会被互联网协会或其继承者或受让人撤销。
本文件和本文件所载信息是在“如实”的基础上提供的，互联网协会和互联网工程任务组拒绝提供所有保证，明示或暗示，包括但不限于保证此处信息的使用不会侵犯任何权利或对适销性或适合某一特定用途的任何默示保证。
